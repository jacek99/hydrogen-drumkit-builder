#!/usr/bin/env ruby
require 'optparse'
require 'fileutils'
require 'builder'

options = {}
 
 optparse = OptionParser.new do|opts|

   opts.banner = "Usage: hydrobuild.rb samples_folder drumkit_name"
 
   options[:force] = false
   opts.on( '-f', '--force', 'Forces deletion of the existing drumkit and recreates it from scratch' ) do
     options[:force] = true
   end

   # This displays the help screen, all programs are
   # assumed to have this option.
   opts.on( '-h', '--help', 'Display this screen' ) do
     puts opts
     exit
   end
 end

optparse.parse!

if ARGV.size != 2 
	raise "Exactly 2 command line arguments must be passed: samples_folder drumkit_name"
end

samples_folder = ARGV[0]
drumkit_name = ARGV[1]
target_folder = "#{Dir.home}/.hydrogen/data/drumkits/#{drumkit_name}"

sample_count = 0

# validate input
if not File.directory? samples_folder
	raise "#{samples_folder} is not a valid folder"
end

if File.directory? target_folder 

	if options[:force]
		puts "Found existing #{drumkit_name} folder, forcing deleting it..."
		FileUtils.rm_rf target_folder
	else
		raise "Drumkit folder #{target_folder} already exists! Use -f to delete and recreate."
	end
	
end

FileUtils.mkdir_p target_folder

# generate xml 
xml = Builder::XmlMarkup.new(:indent => 4)
xml.drumkit_info do |drumkit_info|
  drumkit_info.name drumkit_name
  drumkit_info.author ENV['USERNAME']
  drumkit_info.info "Drumkit generated by hydrogen-drumkit-builder (https://github.com/jacek99/hydrogen-drumkit-builder)"
  drumkit_info.instrumentList do |instrumentList|
  	# this is where the fun begins, let's start walking the samples folder
  	instrument_folders = Dir.entries(samples_folder).select {|f| !File.directory? f}
  	instrument_folders.each do |folder|
  		# WAV/FLAC files can be either in an instrument folder (e.g. "Kick Drum")
  		# or in a subtype subfolder (e.g. "Kick Drum/Plastic Beater", "Kick Drum/Felt Beater", etc)

  		puts "Processing instrument folder '#{folder}'..."

  		samples = Dir["#{folder}/*.wav"]
  		if samples.size == 0
  			# need to go one level deeper

  			instrument_style_folders = Dir.entries("#{samples_folder}/#{folder}").select {|f| !File.directory? f}
  			instrument_style_folders.each do |style_folder|

  				puts "\tProcessing instrument style folder '#{folder}/#{style_folder}'..."

  				samples = Dir["#{samples_folder}/#{folder}/#{style_folder}/*.wav"]
  				

  				puts "#{style_folder}/#{samples}"
  			end
  		else
  			# found samples in first folder, so just instrument, no style
  		end 

  	end

  end
end

puts xml.target!

# write file
open("#{target_folder}/drumkit.xml", 'w') { |f|
  f.puts xml.target!
}

puts "Drumkit #{drumkit_name} generated with #{sample_count} samples."

# Das Ende, das Ende der Welt!